#!/bin/bash

# Stop on errors
set -e

# Replace the server name
if [ "$DOMAIN_NAME" != "" ]; then
    sed -i "s!www.example.com!$DOMAIN_NAME!g" /etc/apache2/sites-available/000-default.conf
fi

# Replace the public directory
if [ "$PUBLIC_DIR" != "" ]; then
    sed -i "s!/var/www/html/public!$PUBLIC_DIR!g" /etc/apache2/sites-available/000-default.conf
fi

# Create the SSL certificate
if [ ! -f "/etc/ssl/private/ssl-cert-snakeoil.key" ]; then
	openssl req \
		-new \
		-newkey rsa:2048 \
		-days 3650 \
		-nodes \
		-x509 \
		-subj "/C=NL/ST=Zuid Holland/L=Rotterdam/O=Chess Zebra/OU=Tech/CN=$DOMAIN_NAME" \
		-keyout /etc/ssl/private/ssl-cert-snakeoil.key \
		-out /etc/ssl/certs/ssl-cert-snakeoil.pem \
		-reqexts SAN \
		-extensions SAN \
		-config <(cat /usr/lib/ssl/openssl.cnf ; printf "[SAN]\nsubjectAltName=DNS:$DOMAIN_NAME") \
		-sha256
fi

# Note: we don't just use "apache2ctl" here because it itself is just a shell-script wrapper around apache2 which provides extra functionality like "apache2ctl start" for launching apache2 in the background.
# (also, when run as "apache2ctl <apache args>", it does not use "exec", which leaves an undesirable resident shell process)

: "${APACHE_CONFDIR:=/etc/apache2}"
: "${APACHE_ENVVARS:=$APACHE_CONFDIR/envvars}"
if test -f "$APACHE_ENVVARS"; then
	. "$APACHE_ENVVARS"
fi

# Apache gets grumpy about PID files pre-existing
: "${APACHE_RUN_DIR:=/var/run/apache2}"
: "${APACHE_PID_FILE:=$APACHE_RUN_DIR/apache2.pid}"
rm -f "$APACHE_PID_FILE"

# create missing directories
# (especially APACHE_RUN_DIR, APACHE_LOCK_DIR, and APACHE_LOG_DIR)
for e in "${!APACHE_@}"; do
	if [[ "$e" == *_DIR ]] && [[ "${!e}" == /* ]]; then
		# handle "/var/lock" being a symlink to "/run/lock", but "/run/lock" not existing beforehand, so "/var/lock/something" fails to mkdir
		#   mkdir: cannot create directory '/var/lock': File exists
		dir="${!e}"
		while [ "$dir" != "$(dirname "$dir")" ]; do
			dir="$(dirname "$dir")"
			if [ -d "$dir" ]; then
				break
			fi
			absDir="$(readlink -f "$dir" 2>/dev/null || :)"
			if [ -n "$absDir" ]; then
				mkdir -p "$absDir"
			fi
		done

		mkdir -p "${!e}"
	fi
done

exec apache2 -DFOREGROUND "$@"
